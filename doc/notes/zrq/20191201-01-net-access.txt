#
# <meta:header>
#   <meta:licence>
#     Copyright (C) 2019 by Wizzard Solutions Ltd, ischnura@metagrid.co.uk
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#


#----------------------------------------------------------------
# Login using REPL via USB.
#[user@desktop]

    minicom \
        --device /dev/ttyUSB0

    >   Welcome to minicom 2.7.1
    >
    >   OPTIONS: I18n
    >   Compiled on Aug 13 2018, 16:36:08.
    >   Port /dev/ttyUSB0, 01:19:04
    >
    >   Press CTRL-A Z for help on special keys


#----------------------------------------------------------------
# Reset the board.
#[user@esp8266]

    Ctrl^D

    >   MPY: soft reboot
    >   WebREPL daemon started on ws://10.6.0.69:8266
    >   Started webrepl in normal mode
    >   MicroPython v1.11-8-g48dcbbe60 on 2019-05-29; ESP module with ESP8266
    >   Type "help()" for more information.


#----------------------------------------------------------------
# Check the Wifi access-point interface.
#[user@esp8266]

import network

ap_if = network.WLAN(network.AP_IF)

ap_if.active()
    >   False

ap_if.ifconfig()
    >   ('0.0.0.0', '0.0.0.0', '0.0.0.0', '10.6.0.1')


#----------------------------------------------------------------
# Check the Wifi station interface.
#[user@esp8266]

import network

sta_if = network.WLAN(network.STA_IF)

sta_if.active()
    >   True

sta_if.ifconfig()
    >   ('10.6.0.22', '255.255.0.0', '10.6.0.1', '10.6.0.1')





